{"version":3,"sources":["timer.jsx","logo.png","App.js","reportWebVitals.js","index.js"],"names":["Timer","state","hour","minutes","seconds","this","myInterval","setInterval","setState","clearInterval","id","class","Component","App","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAGqBA,G,kNACjBC,MAAQ,CACJC,KAAK,GACLC,QAAS,GACTC,QAAS,G,kEAGQ,IAAD,OAChBC,KAAKC,WAAaC,aAAY,WAAO,IAAD,EACG,EAAKN,MAAhCC,EADwB,EACxBA,KAAME,EADkB,EAClBA,QAASD,EADS,EACTA,QAEnBC,EAAU,GACV,EAAKI,UAAS,kBAAkB,CAC5BJ,QADU,EAAGA,QACM,MAKX,IAAZA,IACgB,IAAZD,GAAiBD,GAAQ,GACzBO,cAAc,EAAKH,YAGR,IAAZH,EACC,EAAKK,UAAS,kBAAe,CACzBN,KADU,EAAGA,KACH,EACVC,QAAS,GACTC,QAAS,OAGb,EAAKI,UAAS,kBAAkB,CAC5BL,QADU,EAAGA,QACM,EACnBC,QAAS,UAItB,O,6CAIHK,cAAcJ,KAAKC,c,+BAGb,IAAD,EAC8BD,KAAKJ,MAAhCC,EADH,EACGA,KAAMC,EADT,EACSA,QAASC,EADlB,EACkBA,QACvB,OACI,+BACgB,IAAVF,GAA2B,KAAZC,GAA8B,KAAZC,EAC7B,qBAAKM,GAAG,QAAR,SAAgB,8CAChB,+BAAKR,EAAO,GAAP,WAAgBA,GAASA,EAAK,sBAAMS,MAAM,QAAZ,eAAnC,IAAiER,EAAU,GAAV,WAAmBA,GAAYA,EAAQ,sBAAMQ,MAAM,QAAZ,eAAxG,IAAqI,uBAAMD,GAAG,MAAT,UAAgBN,EAAU,GAAV,WAAmBA,GAAYA,EAAQ,sBAAMO,MAAM,QAAZ,2B,GAjD/KC,cCHpB,MAA0B,iCCkB1BC,MAbf,WACE,OAAQ,qBAAKC,UAAU,MAAf,SACR,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,4BACE,cAAC,EAAD,YCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3db60f41.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './timer.css';\r\n\r\nexport default class Timer extends Component {\r\n    state = {\r\n        hour:17,\r\n        minutes: 58 ,\r\n        seconds: 3,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { hour, seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n           \r\n            \r\n            if (seconds === 0) {\r\n                if (minutes === 0 && hour <= 0) {\r\n                    clearInterval(this.myInterval)\r\n                } \r\n                \r\n                if(minutes === 0){\r\n                    this.setState(({ hour }) => ({\r\n                        hour:hour-1,\r\n                        minutes: 59,\r\n                        seconds: 59\r\n                    }))\r\n                }else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }             \r\n        }, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { hour, minutes, seconds } = this.state\r\n        return (\r\n            <div>\r\n                { hour === -1 && minutes === 59 && seconds === 59\r\n                    ? <div id=\"shuru\"><h1>C'mon Nigs</h1></div>\r\n                    : <h1>{hour < 10 ? `0${hour}` : hour}<span class=\"small\">H</span>:{minutes < 10 ? `0${minutes}` : minutes}<span class=\"small\">M</span>:<span id=\"sec\">{seconds < 10 ? `0${seconds}` : seconds}<span class=\"small\">S</span></span></h1>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/logo.d84a1ae1.png\";","\nimport './App.css';\nimport Timer from './timer.jsx'\nimport logo from \"./logo.png\"\n\nfunction App() {\n  return (<div className=\"App\">\n  <header className=\"App-header\">\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    <p>\n      <Timer></Timer>\n    </p>\n    \n  </header>\n</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}